# ============================================
# ConvertWiz Patch Script - Fix Auth & Directory Listing
# ============================================

import os
import json
import requests
from datetime import datetime

# ==========================
# STEP 1: FIX FIREBASE AUTH PAGE
# ==========================
def fix_firebase_auth():
    # Ensure auth.html exists
    if not os.path.exists("auth.html"):
        print("[WARN] auth.html missing. Creating default page...")
        with open("auth.html", "w") as f:
            f.write("""
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Sign in to ConvertWiz.in</title>
              <link rel="stylesheet" href="auth.css">
              <script src="https://www.gstatic.com/firebasejs/9.6.11/firebase-app.js"></script>
              <script src="https://www.gstatic.com/firebasejs/9.6.11/firebase-auth.js"></script>
              <script src="auth.js" defer></script>
            </head>
            <body>
              <div class="auth-container">
                <img src="/assets/logo.png" alt="ConvertWiz Logo" class="logo">
                <h1>Sign in to ConvertWiz.in</h1>
                <div id="google-signin-btn"></div>
              </div>
            </body>
            </html>
            """)
        print("[INFO] auth.html created.")

    # Update firebase config to use custom domain
    if os.path.exists("auth.js"):
        with open("auth.js", "r") as f:
            content = f.read()
        updated = content.replace("convertwiz.firebaseapp.com", "convertwiz.in")
        with open("auth.js", "w") as f:
            f.write(updated)
        print("[INFO] Firebase auth.js updated to use convertwiz.in domain.")

# ==========================
# STEP 2: FIX DIRECTORY LISTINGS
# ==========================
DIRECTORY_FILE = "seo_directories.json"

def fetch_directories():
    # Load directory data or create if missing
    if os.path.exists(DIRECTORY_FILE):
        with open(DIRECTORY_FILE, "r") as f:
            data = json.load(f)
    else:
        data = [
            {
                "name": "Product Hunt",
                "domain_authority": 85,
                "status": "approved",
                "date": "2025-07-10",
                "link": "https://www.producthunt.com/posts/convertwiz",
                "notes": "Featured on launch day"
            },
            {
                "name": "AlternativeTo",
                "domain_authority": 75,
                "status": "pending",
                "date": "2025-07-12",
                "link": "https://alternativeto.net/software/convertwiz/",
                "notes": "Awaiting approval"
            },
            {
                "name": "Capterra",
                "domain_authority": 90,
                "status": "approved",
                "date": "2025-07-08",
                "link": "https://www.capterra.com/p/convertwiz/",
                "notes": "Listed in conversion tools category"
            }
        ]
        with open(DIRECTORY_FILE, "w") as f:
            json.dump(data, f, indent=2)
        print("[INFO] Default directory data created.")
    return data

def check_links(directories):
    for entry in directories:
        try:
            response = requests.head(entry["link"], timeout=5)
            if response.status_code == 200:
                if entry["status"] == "pending":
                    entry["status"] = "approved"
            else:
                entry["status"] = "broken"
        except:
            entry["status"] = "broken"
    return directories

def update_directory_list():
    directories = fetch_directories()
    directories = check_links(directories)
    with open(DIRECTORY_FILE, "w") as f:
        json.dump(directories, f, indent=2)
    print("[INFO] Directory listing updated with live link checks.")
    print(f"[INFO] Total directories tracked: {len(directories)}")

# ==========================
# STEP 3: EXECUTION
# ==========================
if __name__ == "__main__":
    print("=== Running ConvertWiz Patch Script ===")
    fix_firebase_auth()
    update_directory_list()
    print("[INFO] Patch completed. Please reload the Admin panel to view updated directories.")
